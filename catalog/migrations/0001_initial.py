# Generated by Django 3.1 on 2022-04-01 16:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Бренд')),
                ('info', models.TextField(blank=True, verbose_name='Описание бренда')),
                ('slug', models.SlugField(max_length=255, verbose_name='URL бренда')),
            ],
            options={
                'verbose_name': 'Бренд',
                'verbose_name_plural': 'Бренды',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Категория')),
                ('info', models.TextField(blank=True, verbose_name='Описание категории')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Особенность')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Особенность',
                'verbose_name_plural': 'Особенности',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование товара')),
                ('description', models.TextField(blank=True, verbose_name='Описание товара')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена товара')),
                ('count', models.IntegerField(default=0, verbose_name='Количество товаров')),
                ('image', models.ImageField(blank=True, upload_to='', verbose_name='Изображение товара')),
                ('brand_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.brand', verbose_name='Бренд')),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Product_Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_float', models.DecimalField(blank=True, decimal_places=1, max_digits=10, verbose_name='Значение')),
                ('value_text', models.TextField(blank=True, verbose_name='Значение')),
                ('feature_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.feature')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.product')),
            ],
            options={
                'verbose_name': 'Связь',
                'verbose_name_plural': 'Связи',
            },
        ),
        migrations.AddField(
            model_name='brand',
            name='categories',
            field=models.ManyToManyField(to='catalog.Category'),
        ),
    ]
